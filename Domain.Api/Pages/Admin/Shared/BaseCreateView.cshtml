@using System.Reflection

@model (object Item, IEnumerable<string> ExcludedProperties)
@{
    Layout = "~/Pages/Admin/Shared/AdminLayout.cshtml";

    var type = Model.Item.GetType();
    var properties = type.GetProperties().Where(p => !Model.ExcludedProperties.Contains(p.Name));
}

<div class="content-wrapper">
    <!-- Content Header (Page header) -->
    <section class="content-header">
        <div class="container-fluid">
            <div class="row mb-2">
                <div class="col-sm-6">
                    <h1>Project Add</h1>
                </div>
                <div class="col-sm-6">
                    <ol class="breadcrumb float-sm-right">
                        <li class="breadcrumb-item"><a href="#">Home</a></li>
                        <li class="breadcrumb-item active">@type.Name Add</li>
                    </ol>
                </div>
            </div>
        </div><!-- /.container-fluid -->
    </section>

    <!-- Main content -->
    <section class="content">
        <form method="post">
            <div class="row">

                <div class="col-md-12">
                    <div class="card card-primary">
                        <div class="card-header">
                            <h3 class="card-title">General</h3>

                            <div class="card-tools">
                                <button type="button" class="btn btn-tool" data-card-widget="collapse" title="Collapse">
                                    <i class="fas fa-minus"></i>
                                </button>
                            </div>
                        </div>
                        <div class="card-body">
                            @foreach (var prop in properties)
                            {
                                var actualType = Nullable.GetUnderlyingType(prop.PropertyType) ?? prop.PropertyType;

                                @if (actualType.IsEnum)
                                {
                                    var enumValues = Enum.GetValues(actualType);

                                    <div class="card-body">
                                        <div class="form-group">
                                            <label>@prop.Name</label>
                                            <select name ="@prop.Name">
                                                @foreach (var ev in enumValues)
                                                {
                                                    <option value="@((int)ev)">@ev.ToString()</option>
                                                }
                                            </select>
                                        </div>
                                    </div>
                                }

                                else
                                {
                                    <div class="form-group">
                                        <label>@prop.Name</label>
                                        <input id="inputName" class="form-control" name="@prop.Name" value="@prop.GetValue(Model.Item)">
                                    </div>
                                }
                            }
                            
                        </div>
                        <!-- /.card-body -->
                    </div>
                    <!-- /.card -->
                </div>
            </div>

            <div class="row">
                <div class="col-12">
                    <a href="/Admin/@type.Name/@(type.Name)List" class="btn btn-secondary">Cancel</a>
                    <input type="submit" value="Create" class="btn btn-success float-right">
                </div>
            </div>
        </form>
    </section>
    <!-- /.content -->
</div>